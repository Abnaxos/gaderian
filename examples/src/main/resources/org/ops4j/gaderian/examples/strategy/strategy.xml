<?xml version="1.0"?>
<!--
   Copyright 2005 The Apache Software Foundation

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<!-- START SNIPPET: full -->
<module id="strategy.example" version="1.0.0" package="org.ops4j.gaderian.examples.strategy"
        xmlns="http://www.ops4j.org/xml/schema/gaderian/module/v1.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        >

    <!-- Defines the actual service point which will be invoked by clients.  This is the entry-point for the strategy
    and defines the properties of it:
      - The service factory specified is the StrategyFactory
      - Configuration Identifier: The identifier of the configuration point containing contributed strategies
    -->
    <service-point id="StringManipulator" interface="StringManipulator">
        <invoke-factory xsi:type="StrategyFactoryType" service-id="gaderian.StrategyFactory">
            <construct configuration-id="StringManipulators"/>
        </invoke-factory>
    </service-point>

    <!-- Defines the configuration point to which strategies may contribute to -->
    <configuration-point id="StringManipulators" schema-id="gaderian.StrategyRegistry"/>

    <!-- Defines a strategy which handles invokations not matching any other strategy -->
    <service-point id="UnhandledStringManipulator" interface="StringManipulator" visibility="private">
        <invoke-factory xsi:type="BuilderFactoryType">
            <construct class="impl.UnhandledStringManipulator"/>
        </invoke-factory>
    </service-point>

    <!-- Contributes the unhandled string manipulator service to the set of handled strategies.  This contribution
     specifies that the parent type 'org.ops4j.gaderian.examples.strategy.StringManipulation' should be handled by
     the unhandled string manipulator service.  This also means that if a sub-class of 'StringManipulation' is passed
     into the method and no other strategy has registered themselves to handle that type, this contribution will match.
    -->
    <contribution configuration-id="StringManipulators">
        <strategy class="org.ops4j.gaderian.examples.strategy.StringManipulation" object="service:UnhandledStringManipulator"/>
    </contribution>

    <!-- Defines a strategy which handles requests to manipulate the incoming string into upper case -->
    <service-point id="ToUpperCaseStringManipulator" interface="StringManipulator" visibility="private">
        <invoke-factory xsi:type="BuilderFactoryType">
            <construct class="impl.ToUpperCaseStringManipulator"/>
        </invoke-factory>
    </service-point>

    <!-- Contributes the to-upper-case  string manipulator service to the set of handled strategies -->
    <contribution configuration-id="StringManipulators">
        <strategy class="org.ops4j.gaderian.examples.strategy.ToUpperCaseStringManipulation" object="service:ToUpperCaseStringManipulator"/>
    </contribution>

    <!-- Defines a strategy which handles requests to manipulate the incoming string into lower case -->
    <service-point id="ToLowerCaseStringManipulator" interface="StringManipulator" visibility="private">
        <invoke-factory xsi:type="BuilderFactoryType">
            <construct class="impl.ToLowerCaseStringManipulator"/>
        </invoke-factory>
    </service-point>

    <!-- Contributes the to-lower-case string manipulator service to the set of handled strategies -->
    <contribution configuration-id="StringManipulators">
        <strategy class="org.ops4j.gaderian.examples.strategy.ToLowerCaseStringManipulation" object="service:ToLowerCaseStringManipulator"/>
    </contribution>

</module>
<!-- END SNIPPET: full -->
